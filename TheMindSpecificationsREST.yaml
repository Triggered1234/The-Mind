openapi: 3.0.0
info:
  title: The Mind Online API
  description: API for an online version of The Mind card game
  version: 1.0.0
servers:
  - url: https://api.themindgame.com

paths:
  /session/create:
    post:
      summary: Create a new game session
      parameters:
        - name: player_id
          in: query
          required: true
          schema:
            type: string
        - name: max_players
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Session created
          content:
            application/json:
              schema:
                type: object
                properties:
                  session_id:
                    type: string
                  max_players:
                    type: integer
                  players:
                    type: array
                    items:
                      type: string
                  status:
                    type: string

  /session/join:
    post:
      summary: Join an existing game session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                session_id:
                  type: string
                player_id:
                  type: string
                nickname:
                  type: string
      responses:
        '200':
          description: Successfully joined session
          content:
            application/json:
              schema:
                type: object
                properties:
                  session_id:
                    type: string
                  player_id:
                    type: string
                  nickname:
                    type: string
        '404':
          description: Session not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Session not found"


  /game/request-shuriken:
    get:
      summary: Request to use a shuriken
      parameters:
        - name: session_id
          in: query
          required: true
          schema:
            type: string
        - name: player_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Shuriken request status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string

  /game/next-level:
    get:
      summary: Move to the next level
      parameters:
        - name: session_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Next level initiated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string

  /game/play-card:
    post:
      summary: Play a card
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                session_id:
                  type: string
                player_id:
                  type: string
                card:
                  type: integer
      responses:
        '200':
          description: Card played successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string

  /game/choose-character:
    post:
      summary: Choose a character
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                session_id:
                  type: string
                player_id:
                  type: string
                character_id:
                  type: string
      responses:
        '200':
          description: Character chosen
          content:
            application/json:
              schema:
                type: object
                properties:
                  session_id:
                    type: string
                  player_id:
                    type: string
                  character_id:
                    type: string
                  status:
                    type: string

  /game/start:
    post:
      summary: Start the game
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                session_id:
                  type: string
      responses:
        '200':
          description: Game started
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string

  /game/replay:
    post:
      summary: Replay the game with the same players
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                session_id:
                  type: string
      responses:
        '200':
          description: Game restarted
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string

  /auth/register:
    post:
      summary: Create a new user account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                  username:
                    type: string

  /auth/login:
    post:
      summary: Log in to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                  token:
                    type: string
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User not found"
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid email or password"

  /auth/forgot-password:
    post:
      summary: Request password reset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Password reset email sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Password reset email sent"
        '404':
          description: Email not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Email not found"

