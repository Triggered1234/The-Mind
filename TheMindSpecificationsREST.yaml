openapi: 3.0.0
info:
  title: The Mind Online API
  description: API for an online version of The Mind card game
  version: 1.0.0
servers:
  - url: https://api.themindgame.com

paths:

  /sessions:
    post:
      summary: Create a new game session
      parameters:
        - name: player_id
          in: query
          required: true
          schema:
            type: string
        - name: max_players
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Session created
          content:
            application/json:
              schema:
                type: object
                properties:
                  session_id:
                    type: string
                  max_players:
                    type: integer
                  players:
                    type: array
                    items:
                      type: string
                  status:
                    type: string

  /sessions/{session_id}:
    get:
      summary: Retrieve session details
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Session data retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  session_id:
                    type: string
                  max_players:
                    type: integer
                  status:
                    type: string
                  level:
                    type: integer
                  lives:
                    type: integer
                  shurikens:
                    type: integer

  /sessions/{session_id}/players:
    post:
      summary: Join an existing session
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                player_id:
                  type: string
                nickname:
                  type: string
      responses:
        '200':
          description: Player joined
          content:
            application/json:
              schema:
                type: object
                properties:
                  session_id:
                    type: string
                  player_id:
                    type: string
                  nickname:
                    type: string
        '404':
          description: Session not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Session not found"

    get:
      summary: Retrieve list of players in the session
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Player list retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  players:
                    type: array
                    items:
                      type: object
                      properties:
                        player_id:
                          type: string
                        nickname:
                          type: string
                        character_id:
                          type: string

  /sessions/{session_id}/shuriken-requests:
    post:
      summary: Request to use a shuriken
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                player_id:
                  type: string
      responses:
        '200':
          description: Shuriken request status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string

  /sessions/{session_id}/level:
    patch:
      summary: Move to the next level
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Next level initiated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string

  /sessions/{session_id}/cards:
    post:
      summary: Play a card
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                player_id:
                  type: string
                card:
                  type: integer
      responses:
        '200':
          description: Card played successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string

    get:
      summary: Retrieve current played cards
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Cards played in the session
          content:
            application/json:
              schema:
                type: object
                properties:
                  cards_played:
                    type: array
                    items:
                      type: object
                      properties:
                        player_id:
                          type: string
                        card:
                          type: integer

  /sessions/{session_id}/characters:
    post:
      summary: Choose a character
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                player_id:
                  type: string
                character_id:
                  type: string
      responses:
        '200':
          description: Character chosen
          content:
            application/json:
              schema:
                type: object
                properties:
                  session_id:
                    type: string
                  player_id:
                    type: string
                  character_id:
                    type: string
                  status:
                    type: string

  /sessions/{session_id}/start:
    post:
      summary: Start the game
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Game started
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string

  /sessions/{session_id}/replay:
    post:
      summary: Replay the game with the same players
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Game restarted
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string

  /sessions/{session_id}/state:
    get:
      summary: Retrieve current game state
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Game state retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  level:
                    type: integer
                  lives:
                    type: integer
                  shurikens:
                    type: integer
                  status:
                    type: string

  /auth/users:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                  username:
                    type: string

  /auth/users/{user_id}:
    get:
      summary: Retrieve user profile
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User profile retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                  username:
                    type: string
                  email:
                    type: string

  /auth/sessions:
    post:
      summary: Log in to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                  token:
                    type: string
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User not found"
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid email or password"

  /auth/password-resets:
    post:
      summary: Request password reset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Password reset email sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Password reset email sent"
        '404':
          description: Email not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Email not found"
