openapi: 3.0.0
info:
  title: The Mind Online API
  description: RESTful API for an online version of The Mind card game
  version: 1.0.0
servers:
  - url: https://api.themindgame.com

paths:

  /sessions:
    post:
      summary: Create a new game session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                player_id:
                  type: string
                max_players:
                  type: integer
      responses:
        '201':
          description: Session created
          content:
            application/json:
              schema:
                type: object
                properties:
                  session_id:
                    type: string
                  max_players:
                    type: integer
                  players:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
        '400':
          description: Invalid request

  /sessions/{session_id}/players:
    post:
      summary: Join an existing session
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                player_id:
                  type: string
                nickname:
                  type: string
      responses:
        '201':
          description: Player joined
          content:
            application/json:
              schema:
                type: object
                properties:
                  session_id:
                    type: string
                  player_id:
                    type: string
                  nickname:
                    type: string
        '404':
          description: Session not found

  /sessions/{session_id}/shuriken-uses:
    post:
      summary: Use a shuriken in the session
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                player_id:
                  type: string
      responses:
        '200':
          description: Shuriken used
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string

  /sessions/{session_id}/level:
    patch:
      summary: Move to the next level
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Next level initiated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string

  /sessions/{session_id}/cards:
    post:
      summary: Play a card
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                player_id:
                  type: string
                card:
                  type: integer
      responses:
        '200':
          description: Card played successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string

  /sessions/{session_id}/characters:
    post:
      summary: Choose a character
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                player_id:
                  type: string
                character_id:
                  type: string
      responses:
        '200':
          description: Character chosen
          content:
            application/json:
              schema:
                type: object
                properties:
                  session_id:
                    type: string
                  player_id:
                    type: string
                  character_id:
                    type: string
                  status:
                    type: string

  /sessions/{session_id}/game:
    patch:
      summary: Update game state (start or replay)
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum: [start, replay]
      responses:
        '200':
          description: Game state updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string

  /users:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                  username:
                    type: string

  /login-sessions:
    post:
      summary: Create a login session (authenticate user)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                  token:
                    type: string
        '401':
          description: Invalid credentials
        '404':
          description: User not found

  /password-resets:
    post:
      summary: Request password reset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Password reset email sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
        '404':
          description: Email not found
